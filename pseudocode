Program: GuessWho.java
//Import lines
import java.awt.CardLayout; //can we do import java.awt.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.GraphicsDevice.WindowTranslucency;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;

public class GuessWho{
    //Initiate all variables
        - GUI Variables
            - JButton startButton = new JButton(); 
            - JFrame frame = new JFrame(); 
            - JText text = new JText();
            - and more...
        - Fonts
            - static Font font = new Font("Size", Font.BOLD , 20);
            - and more fonts as needed...
        - GUI Character Images
            - static ImageIcon Olivia = new ImageIcon("Olivia.jpg");
            - and the other 23 character photos...
        - Variables used for the logic of the program
            - boolean gameStarted
            - boolean won
            - String [] questionList
            - int numCards
            - and more variables as needed...
    
    //Initiate all objects and put them in a 2D array
      - char[0][0] = new Olivia("Olivia", "Brown", false, "Dark Skin", "Black", False, False, False, False, "Tied", False); 
      - char[1][0] = new Nick("Nick", "Brown", True, "Light Skin", "Blonde", False, False, False, False, "Short", True); 
      - char[2][0] = new David("David", "Brown", True, "Light Skin", "Blonde", True, False, True, True, "Short", False); 
      - char[3][0] = new Leo("Leo", "Brown", True, "Dark Skin", "White", True, False, True, False, "Short", False); 
      - char[0][1] = new Emma("Emma", "Brown", False, "Light Skin", "Ginger", False, False, False, False, "Tied", False); 
      - char[1][1] = new Ben("Ben", "Brown", True, "Light Skin", "Brown", False, True, False, False, "Short", True); 
      - char[2][1] = new Eric("Eric", "Blue", True, "Light Skin", "Black", False, False, False, False, "Short", False); 
      - char[3][1] = new Rachel("Rachel", "Blue", False, "Light Skin", "Brown", False, True, False, False, "Long", True); 
      - char[0][2] = new Amy("Amy", "Brown", False, "Light Skin", "Black", False, True, False, False, "Short", False); 
      - char[1][2] = new Mike("Mike", "Brown", True, "Light Skin", "Black", False, False, True, True, "Short", False); 
      - char[2][2] = new Gabe("Gabe", "Brown", True, "Dark Skin", "Black", False, False, False, False, "Short", False); 
      - char[3][2] = new Jordan("Jordan", "Brown", True, "Dark Skin", "Black", True, False, False, False, "Short", True); 
      - char[0][3] = new Carmen("Carmen", "Brown", False, "Dark Skin", "White", False, False, True, False, "Short", True); 
      - char[1][3] = new Joe("Joe", "Brown", True, "Dark Skin", "White", True, True, True, False, "Bald", False); 
      - char[2][3] = new Mia("Mia", "Brown", False, "Dark Skin", "Black", False, False, True, False, "Long", False); 
      - char[3][3] = new Sam("Sam", "Green", True, "Dark Skin", "Black", False, False, False, True, "Short", False); 
      - char[0][4] = new Sofia("Sofia", "Green", False, "Dark Skin", "Brown", False, False, True, False, "Short", True); 
      - char[1][4] = new Lily("Lily", "Green", False, "Dark Skin", "Brown", False, False, True, True, "Long", False); 
      - char[2][4] = new Daniel("Daniel", "Green", True, "Light Skin", "Ginger", True, False, False, False, "Tied", False); 
      - char[3][4] = new Al("Al", "Green", True, "Dark Skin", "White", True, True, False, False, "Bald", False); 
      - char[0][5] = new Laura("Laura", "Green", False, "Dark Skin", "Black", False, False, True, False, "Long", True); 
      - char[1][5] = new Liz("Liz", "Blue", False, "Light Skin", "White", False, True, True, False, "Long", False); 
      - char[2][5] = new Katie("Katie", "Blue", False, "Light Skin", "Blonde", False, False, False, True, "Tied", False); 
      - char[4][5] = new Farah("Farah", "Blue", False, "Dark Skin", "Black", False, False, False, False, "Tied", False); 

    //Main method
	public static void main(String[] args) {
        //Set properties for game window
        - Setting window size
        - Setting visibility
        - Setting layout
        - Setting resizable option

        //Set properties for the game panel
		- gamePanel.setLayout(new GridLayout(4, 6));
		- gamePanel.setBounds(50, 50, 400, 500);
		- gamePanel.setVisible(true);

        //Set properties for the selection screen
		- selection.setBounds(600, 20, 500, 100);
		- selection.setFont(font);

        //Set properties for the confirm button
		- confirm.setBounds(600, 250, 300, 100);
		- confirm.addActionListener(new Confirm());
		- confirm.setFont(font);

        //Set properties for character selection label
		- character.setBounds(600, 150, 300, 100);
		- character.setFont(font2);

        //Set properties for game option menu
		- window.add(options);
		- options.setBounds(window.getWidth()/2-250, 200, 500, 500);
		- options.add(title); 
		- options.setLayout(new BoxLayout(options, BoxLayout.Y_AXIS));
		- title.setFont(font);
		- title.setAlignmentX(Component.CENTER_ALIGNMENT);

        //Set properties for player vs computer button

        //Set properties for computer vs computer button

        //Set properties for player vs player button

        //Set properties for confirm question button

        //Set properties for computer output text

        //Set properties for confirm changes button

        //Set properties for yes button

        //Set properties for no button

        //Set properties for answer text

        //Set properties for confirm answer button

        //Set grid for button
        for (int i = 0; i < 6; i++) {
			for (int j = 0; j < 4; j++) {
				charButton[i][j] = new JButton(); 
				charButton[i][j].addActionListener(new CharSelection()); 
				gamePanel.add(charButton[i][j]); 
			}
		}

        //Set icon image for button
		- charButton[0][0].setIcon(Olivia);
        - and other 23 character images...

        //Setting names for each button
		- charButton[0][0].setText("Olivia"); 
        - and same for the other 23 buttons...

        //Adding questions to question bank
		- questionList[0] = "Is the eye colour brown?"; 
        - and adding other questions...

        //Implement action for yes button
	    //Implement action for no button
	    //Implement action for confirm changes button
	    //Implement action for character selection button
	    //Implement action for ask questions button
        //Implement action for confirm button
        //Implement action for start player vs computer button

        - Gets user input
            - JButton
            - JText
            - MyKeyListener
        
        - win method
          - If the player wins
            - add title 
            - set the visibility of the restart button to true 
            - set the visibility of the questions button to false
            - add 1 to wins 
        
        - lose method
           - If a player loses
            - add title 
            - set the visibility of the restart button to true
            - set the visibility of the questions button to false
            - add 1 to losses 
        
        - options method
          - selection
            - player vs player
            - player vs computer
            - computer vs computer 
        
        - beginGame method
          - set startButton invisible
          - set questionsButton visible
          - set title invisible
          - add gameInterface
        
        - restartGame method
          - set all images to default image
          - set all questions visible
        
        - leaderboard method
          - puts the wins/loses onto a leadership GUI
        
        - getFile method
          - gets the wins/loses score from a file
        
        - writeFile method
          - saves the wins/loses score into a file
        
        - Graphics Class
         - animation 
        
        - GetUserKey Class
          - press 'a' = scroll quesition left
          - press 'd' = scroll questions right
          - press 'enter' = confirm quesiton 
        
        Characters Class
        - Constructor Method (Character)
          - initiate variables
            - String: -name
            - String: -eyeColor
            - Boolean: -gender //true if Male, false if Female
            - String: -skinTone
            - String: -hairColor
            - Boolean: -facialHair //true if they have facial hair, false if they do not have facial hair
            - Boolean: -glasses //true if they are wearing glasses, false if not wearing glasses
            - Boolean: -visibleTeeth //true if teeth are visible, false if teeth are not visible
            - Boolean: -wearingHat //true if wearing hat, false if not wearing hat
            - String: -hairLength
            - Boolean: -piercings //true if they have piercings, false if they don't
        
        //Getter methods
            - getGender()
            - getHairColor()
            - getSkinTone()
            - getFacialHair()
            - getGlasses()
            - getVisibleTeeth()
            - getWearHat()
            - getHairLength()
            - getEyeColor()
    
    
    
